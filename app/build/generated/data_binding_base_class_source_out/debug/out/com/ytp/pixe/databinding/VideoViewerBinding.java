// Generated by view binder compiler. Do not edit!
package com.ytp.pixe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.exoplayer2.ui.StyledPlayerView;
import com.ytp.pixe.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VideoViewerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final CardView btnClip;

  @NonNull
  public final ImageView btnDislike;

  @NonNull
  public final CardView btnDownload;

  @NonNull
  public final ImageView btnLike;

  @NonNull
  public final CardView btnShare;

  @NonNull
  public final CardView btnSubscribe;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final CircleImageView channelProfileImg;

  @NonNull
  public final FrameLayout frameLayout2;

  @NonNull
  public final ImageView imageViewClip;

  @NonNull
  public final ImageView imageViewDownload;

  @NonNull
  public final ImageView imageViewShare;

  @NonNull
  public final CircleImageView img;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final StyledPlayerView viewer;

  private VideoViewerBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView btnBack,
      @NonNull CardView btnClip, @NonNull ImageView btnDislike, @NonNull CardView btnDownload,
      @NonNull ImageView btnLike, @NonNull CardView btnShare, @NonNull CardView btnSubscribe,
      @NonNull CardView cardView2, @NonNull CircleImageView channelProfileImg,
      @NonNull FrameLayout frameLayout2, @NonNull ImageView imageViewClip,
      @NonNull ImageView imageViewDownload, @NonNull ImageView imageViewShare,
      @NonNull CircleImageView img, @NonNull TextView textView, @NonNull TextView textView2,
      @NonNull TextView textView3, @NonNull TextView textView4, @NonNull TextView textView5,
      @NonNull TextView textView7, @NonNull StyledPlayerView viewer) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnClip = btnClip;
    this.btnDislike = btnDislike;
    this.btnDownload = btnDownload;
    this.btnLike = btnLike;
    this.btnShare = btnShare;
    this.btnSubscribe = btnSubscribe;
    this.cardView2 = cardView2;
    this.channelProfileImg = channelProfileImg;
    this.frameLayout2 = frameLayout2;
    this.imageViewClip = imageViewClip;
    this.imageViewDownload = imageViewDownload;
    this.imageViewShare = imageViewShare;
    this.img = img;
    this.textView = textView;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.textView5 = textView5;
    this.textView7 = textView7;
    this.viewer = viewer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VideoViewerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VideoViewerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.video_viewer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VideoViewerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_clip;
      CardView btnClip = ViewBindings.findChildViewById(rootView, id);
      if (btnClip == null) {
        break missingId;
      }

      id = R.id.btn_dislike;
      ImageView btnDislike = ViewBindings.findChildViewById(rootView, id);
      if (btnDislike == null) {
        break missingId;
      }

      id = R.id.btn_download;
      CardView btnDownload = ViewBindings.findChildViewById(rootView, id);
      if (btnDownload == null) {
        break missingId;
      }

      id = R.id.btn_like;
      ImageView btnLike = ViewBindings.findChildViewById(rootView, id);
      if (btnLike == null) {
        break missingId;
      }

      id = R.id.btn_share;
      CardView btnShare = ViewBindings.findChildViewById(rootView, id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.btn_subscribe;
      CardView btnSubscribe = ViewBindings.findChildViewById(rootView, id);
      if (btnSubscribe == null) {
        break missingId;
      }

      id = R.id.cardView2;
      CardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      id = R.id.channel_profile_img;
      CircleImageView channelProfileImg = ViewBindings.findChildViewById(rootView, id);
      if (channelProfileImg == null) {
        break missingId;
      }

      id = R.id.frameLayout2;
      FrameLayout frameLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout2 == null) {
        break missingId;
      }

      id = R.id.imageViewClip;
      ImageView imageViewClip = ViewBindings.findChildViewById(rootView, id);
      if (imageViewClip == null) {
        break missingId;
      }

      id = R.id.imageViewDownload;
      ImageView imageViewDownload = ViewBindings.findChildViewById(rootView, id);
      if (imageViewDownload == null) {
        break missingId;
      }

      id = R.id.imageViewShare;
      ImageView imageViewShare = ViewBindings.findChildViewById(rootView, id);
      if (imageViewShare == null) {
        break missingId;
      }

      id = R.id.img;
      CircleImageView img = ViewBindings.findChildViewById(rootView, id);
      if (img == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.viewer;
      StyledPlayerView viewer = ViewBindings.findChildViewById(rootView, id);
      if (viewer == null) {
        break missingId;
      }

      return new VideoViewerBinding((ConstraintLayout) rootView, btnBack, btnClip, btnDislike,
          btnDownload, btnLike, btnShare, btnSubscribe, cardView2, channelProfileImg, frameLayout2,
          imageViewClip, imageViewDownload, imageViewShare, img, textView, textView2, textView3,
          textView4, textView5, textView7, viewer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
